
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: daisyoperatorconfigurations.daisy.com
spec:
  group: daisy.com
  names:
    kind: DaisyOperatorConfiguration
    listKind: DaisyOperatorConfigurationList
    plural: daisyoperatorconfigurations
    singular: daisyoperatorconfiguration
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: DaisyOperatorConfiguration is the Schema for the daisyoperatorconfigurations
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DaisyOperatorConfigurationSpec defines the desired state
              of DaisyOperatorConfiguration !!! IMPORTANT !!! !!! IMPORTANT !!! !!!
              IMPORTANT !!! !!! IMPORTANT !!! !!! IMPORTANT !!! Do not forget to update
              func (config *DaisyOperatorConfigurationSpec) String() Do not forget
              to update CRD spec
            properties:
              alsologtostderr:
                type: string
              chCommonConfigsPath:
                description: Paths where to look for additional ClickHouse config
                  .xml files to be mounted into Pod
                type: string
              chConfigNetworksHostRegexpTemplate:
                type: string
              chConfigUserDefaultNetworksIP:
                items:
                  type: string
                type: array
              chConfigUserDefaultPassword:
                type: string
              chConfigUserDefaultProfile:
                description: Default values for ClickHouse user configuration 1. user/profile
                  - string 2. user/quota - string 3. user/networks/ip - multiple strings
                  4. user/password - string
                type: string
              chConfigUserDefaultQuota:
                type: string
              chHostConfigsPath:
                type: string
              chPassword:
                type: string
              chPort:
                type: integer
              chUsername:
                description: Username and Password to be used by operator to connect
                  to ClickHouse instances for 1. Metrics requests 2. Schema maintenance
                  User credentials can be specified in additional ClickHouse config
                  files located in `chUsersConfigsPath` folder
                type: string
              chUsersConfigsPath:
                type: string
              chiTemplatesPath:
                description: Path where to look for ClickHouseInstallation templates
                  .yaml files
                type: string
              imagebusybox:
                description: Image of BusyBox
                type: string
              log_backtrace_at:
                type: string
              logtostderr:
                type: string
              onStatefulSetCreateFailureAction:
                description: Rolling Create/Update behavior StatefulSet create behavior
                  - what to do in case StatefulSet can't reach new Generation
                type: string
              onStatefulSetUpdateFailureAction:
                description: StatefulSet update behavior - what to do in case StatefulSet
                  can't reach new Generation
                type: string
              reconcileThreadsNumber:
                description: Max number of concurrent reconciles in progress
                type: integer
              statefulSetUpdatePollPeriod:
                description: Create/Update StatefulSet behavior - for how long to
                  sleep while polling StatefulSet to reach new Generation
                format: int64
                type: integer
              statefulSetUpdateTimeout:
                description: Create/Update StatefulSet behavior - for how long to
                  wait for StatefulSet to reach new Generation
                format: int64
                type: integer
              stderrthreshold:
                type: string
              v:
                type: string
              vmodule:
                type: string
              watchNamespaces:
                description: WatchNamespaces where operator watches for events
                items:
                  type: string
                type: array
            required:
            - alsologtostderr
            - chCommonConfigsPath
            - chConfigNetworksHostRegexpTemplate
            - chConfigUserDefaultNetworksIP
            - chConfigUserDefaultPassword
            - chConfigUserDefaultProfile
            - chConfigUserDefaultQuota
            - chHostConfigsPath
            - chPassword
            - chPort
            - chUsername
            - chUsersConfigsPath
            - chiTemplatesPath
            - imagebusybox
            - log_backtrace_at
            - logtostderr
            - onStatefulSetCreateFailureAction
            - onStatefulSetUpdateFailureAction
            - reconcileThreadsNumber
            - statefulSetUpdatePollPeriod
            - statefulSetUpdateTimeout
            - stderrthreshold
            - v
            - vmodule
            - watchNamespaces
            type: object
          status:
            description: DaisyOperatorConfigurationStatus defines the observed state
              of DaisyOperatorConfiguration
            properties:
              phase:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
