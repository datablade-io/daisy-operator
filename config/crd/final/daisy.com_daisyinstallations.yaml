
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: daisyinstallations.daisy.com
spec:
  group: daisy.com
  names:
    kind: DaisyInstallation
    listKind: DaisyInstallationList
    plural: daisyinstallations
    singular: daisyinstallation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Elasticsearch version
      jsonPath: .status.version
      name: version
      type: string
    - jsonPath: .status.clustersCount
      name: clusters
      type: string
    - jsonPath: .status.shardsCount
      name: shards
      type: string
    - jsonPath: .status.replicasCount
      name: replicas
      type: string
    - jsonPath: .status.state
      name: state
      type: string
    - jsonPath: .status.phase
      name: phase
      type: string
    - jsonPath: .status.updated
      name: updated
      type: string
    - jsonPath: .status.added
      name: added
      type: string
    - jsonPath: .status.deleted
      name: deleted
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: DaisyInstallation is the Schema for the daisyinstallations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DaisyInstallationSpec defines the desired state of DaisyInstallation
            properties:
              affinity:
                description: Affinity of TiDB cluster Pods
                properties:
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      pod.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node matches
                          the corresponding matchExpressions; the node(s) with the
                          highest sum are the most preferred.
                        items:
                          description: An empty preferred scheduling term matches
                            all objects with implicit weight 0 (i.e. it's a no-op).
                            A null preferred scheduling term matches no objects (i.e.
                            is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to an update), the system may or may not try to
                          eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: A null or empty node selector term matches
                                no objects. The requirements of them are ANDed. The
                                TopologySelectorTerm type implements a subset of the
                                NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                    type: object
                  podAffinity:
                    description: Describes pod affinity scheduling rules (e.g. co-locate
                      this pod in the same node, zone, etc. as some other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node has
                          pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies which namespaces
                                    the labelSelector applies to (matches against);
                                    null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: weight associated with matching the corresponding
                                podAffinityTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to a pod label update), the system may or may
                          not try to eventually evict the pod from its node. When
                          there are multiple elements, the lists of nodes corresponding
                          to each podAffinityTerm are intersected, i.e. all terms
                          must be satisfied.
                        items:
                          description: Defines a set of pods (namely those matching
                            the labelSelector relative to the given namespace(s))
                            that this pod should be co-located (affinity) or not co-located
                            (anti-affinity) with, where co-located is defined as running
                            on a node whose value of the label with key <topologyKey>
                            matches that of any node on which a pod of the set of
                            pods is running
                          properties:
                            labelSelector:
                              description: A label query over a set of resources,
                                in this case pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            namespaces:
                              description: namespaces specifies which namespaces the
                                labelSelector applies to (matches against); null or
                                empty list means "this pod's namespace"
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: This pod should be co-located (affinity)
                                or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where
                                co-located is defined as running on a node whose value
                                of the label with key topologyKey matches that of
                                any node on which any of the selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                  podAntiAffinity:
                    description: Describes pod anti-affinity scheduling rules (e.g.
                      avoid putting this pod in the same node, zone, etc. as some
                      other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the anti-affinity expressions specified
                          by this field, but it may choose a node that violates one
                          or more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling anti-affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node has
                          pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies which namespaces
                                    the labelSelector applies to (matches against);
                                    null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: weight associated with matching the corresponding
                                podAffinityTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the anti-affinity requirements specified by
                          this field are not met at scheduling time, the pod will
                          not be scheduled onto the node. If the anti-affinity requirements
                          specified by this field cease to be met at some point during
                          pod execution (e.g. due to a pod label update), the system
                          may or may not try to eventually evict the pod from its
                          node. When there are multiple elements, the lists of nodes
                          corresponding to each podAffinityTerm are intersected, i.e.
                          all terms must be satisfied.
                        items:
                          description: Defines a set of pods (namely those matching
                            the labelSelector relative to the given namespace(s))
                            that this pod should be co-located (affinity) or not co-located
                            (anti-affinity) with, where co-located is defined as running
                            on a node whose value of the label with key <topologyKey>
                            matches that of any node on which a pod of the set of
                            pods is running
                          properties:
                            labelSelector:
                              description: A label query over a set of resources,
                                in this case pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            namespaces:
                              description: namespaces specifies which namespaces the
                                labelSelector applies to (matches against); null or
                                empty list means "this pod's namespace"
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: This pod should be co-located (affinity)
                                or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where
                                co-located is defined as running on a node whose value
                                of the label with key topologyKey matches that of
                                any node on which any of the selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                type: object
              annotations:
                additionalProperties:
                  type: string
                description: Base annotations of TiDB cluster Pods, components may
                  add or override selectors upon this respectively
                type: object
              configuration:
                description: Configuration include most settings of the installation
                properties:
                  clusters:
                    additionalProperties:
                      description: Cluster defines item of a clusters section of .configuration
                      properties:
                        files:
                          x-kubernetes-preserve-unknown-fields: true
                          description: Settings
                          type: object
                        layout:
                          description: Layout defines layout section of .spec.configuration.clusters
                          properties:
                            replicasCount:
                              type: integer
                            shards:
                              additionalProperties:
                                properties:
                                  files:
                                    x-kubernetes-preserve-unknown-fields: true
                                    description: Settings
                                    type: object
                                  internalReplication:
                                    type: string
                                  name:
                                    type: string
                                  replicaCount:
                                    type: integer
                                  replicas:
                                    additionalProperties:
                                      description: Replica is either Up/Down/Offline/Tombstone
                                      properties:
                                        files:
                                          x-kubernetes-preserve-unknown-fields: true
                                          description: Settings
                                          type: object
                                        id:
                                          description: store id is also uint64, due
                                            to the same reason as pd id, we store
                                            id as string
                                          type: string
                                        image:
                                          type: string
                                        name:
                                          type: string
                                        settings:
                                          x-kubernetes-preserve-unknown-fields: true
                                          description: Settings
                                          type: object
                                      required:
                                      - id
                                      - name
                                      type: object
                                    type: object
                                  settings:
                                    x-kubernetes-preserve-unknown-fields: true
                                    description: Settings
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: object
                            shardsCount:
                              type: integer
                            type:
                              type: string
                          type: object
                        name:
                          type: string
                        settings:
                          x-kubernetes-preserve-unknown-fields: true
                          description: Settings
                          type: object
                        zookeeper:
                          description: ZookeeperConfig defines zookeeper section of
                            .spec.configuration Refers to https://clickhouse.yandex/docs/en/single/index.html?#server-settings_zookeeper
                          properties:
                            identity:
                              type: string
                            nodes:
                              items:
                                description: ZookeeperNode defines item of nodes section
                                  of .spec.configuration.zookeeper
                                properties:
                                  host:
                                    type: string
                                  port:
                                    format: int32
                                    type: integer
                                type: object
                              type: array
                            operation_timeout_ms:
                              type: integer
                            root:
                              type: string
                            session_timeout_ms:
                              type: integer
                          type: object
                      required:
                      - layout
                      - name
                      type: object
                    type: object
                  files:
                    x-kubernetes-preserve-unknown-fields: true
                    description: Settings
                    type: object
                  profiles:
                    x-kubernetes-preserve-unknown-fields: true
                    description: Settings
                    type: object
                  quotas:
                    x-kubernetes-preserve-unknown-fields: true
                    description: Settings
                    type: object
                  settings:
                    x-kubernetes-preserve-unknown-fields: true
                    description: Settings
                    type: object
                  users:
                    x-kubernetes-preserve-unknown-fields: true
                    description: Settings
                    type: object
                  zookeeper:
                    description: ZookeeperConfig defines zookeeper section of .spec.configuration
                      Refers to https://clickhouse.yandex/docs/en/single/index.html?#server-settings_zookeeper
                    properties:
                      identity:
                        type: string
                      nodes:
                        items:
                          description: ZookeeperNode defines item of nodes section
                            of .spec.configuration.zookeeper
                          properties:
                            host:
                              type: string
                            port:
                              format: int32
                              type: integer
                          type: object
                        type: array
                      operation_timeout_ms:
                        type: integer
                      root:
                        type: string
                      session_timeout_ms:
                        type: integer
                    type: object
                type: object
              enablePVReclaim:
                description: 'Whether enable PVC reclaim for orphan PVC left by statefulset
                  scale-in Optional: Defaults to false'
                type: boolean
              imagePullPolicy:
                default: IfNotPresent
                description: ImagePullPolicy of TiDB cluster Pods
                type: string
              imagePullSecrets:
                description: ImagePullSecrets is an optional list of references to
                  secrets in the same namespace to use for pulling any of the images.
                items:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                type: array
              nodeSelector:
                additionalProperties:
                  type: string
                description: Base node selectors of Daisy cluster Pods, components
                  may add or override selectors upon this respectively
                type: object
              paused:
                description: Indicates that the daisy cluster is paused and will not
                  be processed by the controller.
                type: boolean
              priorityClassName:
                description: 'PriorityClassName of TiDB cluster Pods Optional: Defaults
                  to omitted'
                type: string
              pvReclaimPolicy:
                default: Retain
                description: Persistent volume reclaim policy applied to the PVs that
                  consumed by TiDB cluster
                type: string
              serviceAccount:
                description: Specify a Service Account
                type: string
              tolerations:
                description: Base tolerations of TiDB cluster Pods, components may
                  add more tolerations upon this respectively
                items:
                  description: The pod this Toleration is attached to tolerates any
                    taint that matches the triple <key,value,effect> using the matching
                    operator <operator>.
                  properties:
                    effect:
                      description: Effect indicates the taint effect to match. Empty
                        means match all taint effects. When specified, allowed values
                        are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: Key is the taint key that the toleration applies
                        to. Empty means match all taint keys. If the key is empty,
                        operator must be Exists; this combination means to match all
                        values and all keys.
                      type: string
                    operator:
                      description: Operator represents a key's relationship to the
                        value. Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod
                        can tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: TolerationSeconds represents the period of time
                        the toleration (which must be of effect NoExecute, otherwise
                        this field is ignored) tolerates the taint. By default, it
                        is not set, which means tolerate the taint forever (do not
                        evict). Zero and negative values will be treated as 0 (evict
                        immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: Value is the taint value the toleration matches
                        to. If the operator is Exists, the value should be empty,
                        otherwise just a regular string.
                      type: string
                  type: object
                type: array
            required:
            - configuration
            type: object
          status:
            description: DaisyInstallationStatus defines the observed state of DaisyInstallation
            properties:
              added:
                type: integer
              clusters:
                additionalProperties:
                  description: ClusterStatus is status of Daisy Cluster
                  properties:
                    health:
                      type: boolean
                    shards:
                      additionalProperties:
                        properties:
                          failureReplicas:
                            additionalProperties:
                              description: FailureReplica is the failure replica information
                              properties:
                                createdAt:
                                  format: date-time
                                  type: string
                                statefulSetName:
                                  type: string
                                storeID:
                                  type: string
                              type: object
                            type: object
                          health:
                            type: boolean
                          name:
                            type: string
                          phase:
                            description: MemberPhase is the current state of member
                            type: string
                          replicaCount:
                            type: integer
                          replicas:
                            additionalProperties:
                              properties:
                                health:
                                  type: boolean
                                id:
                                  description: store id is also uint64, due to the
                                    same reason as pd id, we store id as string
                                  type: string
                                image:
                                  type: string
                                ip:
                                  type: string
                                lastTransitionTime:
                                  description: LastHeartbeatTime metav1.Time `json:"lastHeartbeatTime"`
                                    Last time the health transitioned from one to
                                    another.
                                  format: date-time
                                  type: string
                                leaderCount:
                                  format: int32
                                  type: integer
                                name:
                                  type: string
                                phase:
                                  description: MemberPhase is the current state of
                                    member
                                  type: string
                                state:
                                  type: string
                                statefulSet:
                                  description: StatefulSetStatus represents the current
                                    state of a StatefulSet.
                                  properties:
                                    collisionCount:
                                      description: collisionCount is the count of
                                        hash collisions for the StatefulSet. The StatefulSet
                                        controller uses this field as a collision
                                        avoidance mechanism when it needs to create
                                        the name for the newest ControllerRevision.
                                      format: int32
                                      type: integer
                                    conditions:
                                      description: Represents the latest available
                                        observations of a statefulset's current state.
                                      items:
                                        description: StatefulSetCondition describes
                                          the state of a statefulset at a certain
                                          point.
                                        properties:
                                          lastTransitionTime:
                                            description: Last time the condition transitioned
                                              from one status to another.
                                            format: date-time
                                            type: string
                                          message:
                                            description: A human readable message
                                              indicating details about the transition.
                                            type: string
                                          reason:
                                            description: The reason for the condition's
                                              last transition.
                                            type: string
                                          status:
                                            description: Status of the condition,
                                              one of True, False, Unknown.
                                            type: string
                                          type:
                                            description: Type of statefulset condition.
                                            type: string
                                        required:
                                        - status
                                        - type
                                        type: object
                                      type: array
                                    currentReplicas:
                                      description: currentReplicas is the number of
                                        Pods created by the StatefulSet controller
                                        from the StatefulSet version indicated by
                                        currentRevision.
                                      format: int32
                                      type: integer
                                    currentRevision:
                                      description: currentRevision, if not empty,
                                        indicates the version of the StatefulSet used
                                        to generate Pods in the sequence [0,currentReplicas).
                                      type: string
                                    observedGeneration:
                                      description: observedGeneration is the most
                                        recent generation observed for this StatefulSet.
                                        It corresponds to the StatefulSet's generation,
                                        which is updated on mutation by the API Server.
                                      format: int64
                                      type: integer
                                    readyReplicas:
                                      description: readyReplicas is the number of
                                        Pods created by the StatefulSet controller
                                        that have a Ready Condition.
                                      format: int32
                                      type: integer
                                    replicas:
                                      description: replicas is the number of Pods
                                        created by the StatefulSet controller.
                                      format: int32
                                      type: integer
                                    updateRevision:
                                      description: updateRevision, if not empty, indicates
                                        the version of the StatefulSet used to generate
                                        Pods in the sequence [replicas-updatedReplicas,replicas)
                                      type: string
                                    updatedReplicas:
                                      description: updatedReplicas is the number of
                                        Pods created by the StatefulSet controller
                                        from the StatefulSet version indicated by
                                        updateRevision.
                                      format: int32
                                      type: integer
                                  required:
                                  - replicas
                                  type: object
                              required:
                              - health
                              - id
                              - ip
                              - leaderCount
                              - name
                              - state
                              type: object
                            type: object
                          synced:
                            type: boolean
                          tombstoneReplicas:
                            additionalProperties:
                              properties:
                                health:
                                  type: boolean
                                id:
                                  description: store id is also uint64, due to the
                                    same reason as pd id, we store id as string
                                  type: string
                                image:
                                  type: string
                                ip:
                                  type: string
                                lastTransitionTime:
                                  description: LastHeartbeatTime metav1.Time `json:"lastHeartbeatTime"`
                                    Last time the health transitioned from one to
                                    another.
                                  format: date-time
                                  type: string
                                leaderCount:
                                  format: int32
                                  type: integer
                                name:
                                  type: string
                                phase:
                                  description: MemberPhase is the current state of
                                    member
                                  type: string
                                state:
                                  type: string
                                statefulSet:
                                  description: StatefulSetStatus represents the current
                                    state of a StatefulSet.
                                  properties:
                                    collisionCount:
                                      description: collisionCount is the count of
                                        hash collisions for the StatefulSet. The StatefulSet
                                        controller uses this field as a collision
                                        avoidance mechanism when it needs to create
                                        the name for the newest ControllerRevision.
                                      format: int32
                                      type: integer
                                    conditions:
                                      description: Represents the latest available
                                        observations of a statefulset's current state.
                                      items:
                                        description: StatefulSetCondition describes
                                          the state of a statefulset at a certain
                                          point.
                                        properties:
                                          lastTransitionTime:
                                            description: Last time the condition transitioned
                                              from one status to another.
                                            format: date-time
                                            type: string
                                          message:
                                            description: A human readable message
                                              indicating details about the transition.
                                            type: string
                                          reason:
                                            description: The reason for the condition's
                                              last transition.
                                            type: string
                                          status:
                                            description: Status of the condition,
                                              one of True, False, Unknown.
                                            type: string
                                          type:
                                            description: Type of statefulset condition.
                                            type: string
                                        required:
                                        - status
                                        - type
                                        type: object
                                      type: array
                                    currentReplicas:
                                      description: currentReplicas is the number of
                                        Pods created by the StatefulSet controller
                                        from the StatefulSet version indicated by
                                        currentRevision.
                                      format: int32
                                      type: integer
                                    currentRevision:
                                      description: currentRevision, if not empty,
                                        indicates the version of the StatefulSet used
                                        to generate Pods in the sequence [0,currentReplicas).
                                      type: string
                                    observedGeneration:
                                      description: observedGeneration is the most
                                        recent generation observed for this StatefulSet.
                                        It corresponds to the StatefulSet's generation,
                                        which is updated on mutation by the API Server.
                                      format: int64
                                      type: integer
                                    readyReplicas:
                                      description: readyReplicas is the number of
                                        Pods created by the StatefulSet controller
                                        that have a Ready Condition.
                                      format: int32
                                      type: integer
                                    replicas:
                                      description: replicas is the number of Pods
                                        created by the StatefulSet controller.
                                      format: int32
                                      type: integer
                                    updateRevision:
                                      description: updateRevision, if not empty, indicates
                                        the version of the StatefulSet used to generate
                                        Pods in the sequence [replicas-updatedReplicas,replicas)
                                      type: string
                                    updatedReplicas:
                                      description: updatedReplicas is the number of
                                        Pods created by the StatefulSet controller
                                        from the StatefulSet version indicated by
                                        updateRevision.
                                      format: int32
                                      type: integer
                                  required:
                                  - replicas
                                  type: object
                              required:
                              - health
                              - id
                              - ip
                              - leaderCount
                              - name
                              - state
                              type: object
                            type: object
                        required:
                        - health
                        type: object
                      type: object
                  required:
                  - health
                  type: object
                type: object
              clustersCount:
                type: integer
              conditions:
                description: Represents the latest available observations of a tidb
                  cluster's state.
                items:
                  description: DaisyClusterCondition describes the state of a daisy
                    cluster at a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              deleted:
                type: integer
              phase:
                description: MemberPhase is the current state of member
                type: string
              prevSpec:
                description: DaisyInstallationSpec defines the desired state of DaisyInstallation
                properties:
                  affinity:
                    description: Affinity of TiDB cluster Pods
                    properties:
                      nodeAffinity:
                        description: Describes node affinity scheduling rules for
                          the pod.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from
                              its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      podAffinity:
                        description: Describes pod affinity scheduling rules (e.g.
                          co-locate this pod in the same node, zone, etc. as some
                          other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces
                                        the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to a pod label update),
                              the system may or may not try to eventually evict the
                              pod from its node. When there are multiple elements,
                              the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies which namespaces
                                    the labelSelector applies to (matches against);
                                    null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                      podAntiAffinity:
                        description: Describes pod anti-affinity scheduling rules
                          (e.g. avoid putting this pod in the same node, zone, etc.
                          as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the anti-affinity expressions
                              specified by this field, but it may choose a node that
                              violates one or more of the expressions. The node that
                              is most preferred is the one with the greatest sum of
                              weights, i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              anti-affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces
                                        the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified
                              by this field are not met at scheduling time, the pod
                              will not be scheduled onto the node. If the anti-affinity
                              requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod
                              label update), the system may or may not try to eventually
                              evict the pod from its node. When there are multiple
                              elements, the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies which namespaces
                                    the labelSelector applies to (matches against);
                                    null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                    type: object
                  annotations:
                    additionalProperties:
                      type: string
                    description: Base annotations of TiDB cluster Pods, components
                      may add or override selectors upon this respectively
                    type: object
                  configuration:
                    description: Configuration include most settings of the installation
                    properties:
                      clusters:
                        additionalProperties:
                          description: Cluster defines item of a clusters section
                            of .configuration
                          properties:
                            files:
                              x-kubernetes-preserve-unknown-fields: true
                              description: Settings
                              type: object
                            layout:
                              description: Layout defines layout section of .spec.configuration.clusters
                              properties:
                                replicasCount:
                                  type: integer
                                shards:
                                  additionalProperties:
                                    properties:
                                      files:
                                        x-kubernetes-preserve-unknown-fields: true
                                        description: Settings
                                        type: object
                                      internalReplication:
                                        type: string
                                      name:
                                        type: string
                                      replicaCount:
                                        type: integer
                                      replicas:
                                        additionalProperties:
                                          description: Replica is either Up/Down/Offline/Tombstone
                                          properties:
                                            files:
                                              x-kubernetes-preserve-unknown-fields: true
                                              description: Settings
                                              type: object
                                            id:
                                              description: store id is also uint64,
                                                due to the same reason as pd id, we
                                                store id as string
                                              type: string
                                            image:
                                              type: string
                                            name:
                                              type: string
                                            settings:
                                              x-kubernetes-preserve-unknown-fields: true
                                              description: Settings
                                              type: object
                                          required:
                                          - id
                                          - name
                                          type: object
                                        type: object
                                      settings:
                                        x-kubernetes-preserve-unknown-fields: true
                                        description: Settings
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: object
                                shardsCount:
                                  type: integer
                                type:
                                  type: string
                              type: object
                            name:
                              type: string
                            settings:
                              x-kubernetes-preserve-unknown-fields: true
                              description: Settings
                              type: object
                            zookeeper:
                              description: ZookeeperConfig defines zookeeper section
                                of .spec.configuration Refers to https://clickhouse.yandex/docs/en/single/index.html?#server-settings_zookeeper
                              properties:
                                identity:
                                  type: string
                                nodes:
                                  items:
                                    description: ZookeeperNode defines item of nodes
                                      section of .spec.configuration.zookeeper
                                    properties:
                                      host:
                                        type: string
                                      port:
                                        format: int32
                                        type: integer
                                    type: object
                                  type: array
                                operation_timeout_ms:
                                  type: integer
                                root:
                                  type: string
                                session_timeout_ms:
                                  type: integer
                              type: object
                          required:
                          - layout
                          - name
                          type: object
                        type: object
                      files:
                        x-kubernetes-preserve-unknown-fields: true
                        description: Settings
                        type: object
                      profiles:
                        x-kubernetes-preserve-unknown-fields: true
                        description: Settings
                        type: object
                      quotas:
                        x-kubernetes-preserve-unknown-fields: true
                        description: Settings
                        type: object
                      settings:
                        x-kubernetes-preserve-unknown-fields: true
                        description: Settings
                        type: object
                      users:
                        x-kubernetes-preserve-unknown-fields: true
                        description: Settings
                        type: object
                      zookeeper:
                        description: ZookeeperConfig defines zookeeper section of
                          .spec.configuration Refers to https://clickhouse.yandex/docs/en/single/index.html?#server-settings_zookeeper
                        properties:
                          identity:
                            type: string
                          nodes:
                            items:
                              description: ZookeeperNode defines item of nodes section
                                of .spec.configuration.zookeeper
                              properties:
                                host:
                                  type: string
                                port:
                                  format: int32
                                  type: integer
                              type: object
                            type: array
                          operation_timeout_ms:
                            type: integer
                          root:
                            type: string
                          session_timeout_ms:
                            type: integer
                        type: object
                    type: object
                  enablePVReclaim:
                    description: 'Whether enable PVC reclaim for orphan PVC left by
                      statefulset scale-in Optional: Defaults to false'
                    type: boolean
                  imagePullPolicy:
                    default: IfNotPresent
                    description: ImagePullPolicy of TiDB cluster Pods
                    type: string
                  imagePullSecrets:
                    description: ImagePullSecrets is an optional list of references
                      to secrets in the same namespace to use for pulling any of the
                      images.
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    type: array
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: Base node selectors of Daisy cluster Pods, components
                      may add or override selectors upon this respectively
                    type: object
                  paused:
                    description: Indicates that the daisy cluster is paused and will
                      not be processed by the controller.
                    type: boolean
                  priorityClassName:
                    description: 'PriorityClassName of TiDB cluster Pods Optional:
                      Defaults to omitted'
                    type: string
                  pvReclaimPolicy:
                    default: Retain
                    description: Persistent volume reclaim policy applied to the PVs
                      that consumed by TiDB cluster
                    type: string
                  serviceAccount:
                    description: Specify a Service Account
                    type: string
                  tolerations:
                    description: Base tolerations of TiDB cluster Pods, components
                      may add more tolerations upon this respectively
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                required:
                - configuration
                type: object
              readyReplicas:
                type: integer
              replicasCount:
                type: integer
              shardsCount:
                type: integer
              state:
                type: string
              updated:
                type: integer
              version:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                type: string
            required:
            - added
            - clustersCount
            - deleted
            - readyReplicas
            - replicasCount
            - shardsCount
            - state
            - updated
            - version
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
